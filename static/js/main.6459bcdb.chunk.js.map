{"version":3,"sources":["components/TextField/index.tsx","components/TextField/TextField.tsx","components/SelectField/SelectOption/index.tsx","components/SelectField/SelectOption/SelectOption.tsx","components/icons/ArrowIcon/index.tsx","components/icons/ArrowIcon/ArrowIcon.tsx","components/icons/SearchIcon/index.tsx","components/icons/SearchIcon/SearchIcon.tsx","components/SelectField/SelectField.tsx","common/hooks/useToggle.tsx","components/SelectField/index.tsx","common/hooks/useComponentUnVisible.tsx","components/Button/index.js","components/Button/Button.js","components/MainBlock/MainBlock.tsx","common/mock/index.tsx","components/MainBlock/index.tsx","components/icons/Home/index.tsx","components/icons/Home/Home.tsx","App.tsx","serviceWorker.js","index.tsx"],"names":["TextField","value","placeholder","onChange","className","SelectOption","onPress","avatar","onClick","src","alt","ArrowIcon","isDownArrow","classNames","xmlns","fillRule","strokeLinecap","strokeLinejoin","viewBox","d","SearchIcon","aria-hidden","SelectField","options","searchBy","isSearch","title","isFieldOpen","isAvatarField","fieldRef","onOptionPress","onFieldClick","onSearchChange","ref","name","CSSTransition","in","timeout","unmountOnExit","appear","map","id","key","useToggle","initialState","useState","isToggledOn","setToggle","toggle","useCallback","isOn","setToggleOn","setToggleOff","SelectFieldContainer","initialOptions","initialValue","setOptions","setValue","toggleIsFieldOpen","unsetIsFieldOpen","setSearchBy","setUnVisible","useRef","handleClickOutside","target","current","contains","useEffect","document","addEventListener","removeEventListener","useComponentUnVisible","handleOptionPress","currentId","find","handleSearchChange","regex","RegExp","filter","test","Button","isPrimary","MainBlock","buyers","users","mockBuyersSelect","mockUserSelect","MainBlockContainer","Home","width","height","App","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.6459bcdb.chunk.js","sourcesContent":["import TextField from './TextField';\n\nexport default TextField;\n","import React from 'react';\nimport './text-field.scss';\n\nconst TextField = ({ value, placeholder, onChange }: any) => (\n  <input\n    className=\"text-field\"\n    placeholder={placeholder}\n    value={value}\n    onChange={onChange}\n  />\n);\n\nexport default TextField;\n","import SelectOption from './SelectOption';\n\nexport default SelectOption;\n","import React from 'react';\nimport './select-option.scss';\n\ntype SelectOptionType = {\n  value: any;\n  onPress?: () => void;\n  avatar?: string;\n};\n\nconst SelectOption = ({ value, onPress, avatar }: SelectOptionType) => (\n  <div className=\"select-option\" onClick={onPress}>\n    {avatar && (\n      <img className=\"select-option__avatar\" src={avatar} alt=\"avatar\" />\n    )}\n    {value}\n  </div>\n);\n\nexport default SelectOption;\n","import ArrowIcon from './ArrowIcon';\n\nexport default ArrowIcon;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './arrow-icon.scss';\n\ntype ArrowIconType = {\n  className?: string;\n  isDownArrow?: boolean;\n};\n\nconst ArrowIcon = ({ className, isDownArrow }: ArrowIconType) => (\n  <div className={classNames('arrow', isDownArrow && 'arrow_down', className)}>\n    <svg xmlns=\"http://www.w3.org/2000/svg\">\n      <path\n        fillRule=\"evenodd\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        viewBox=\"0 0 20 20\"\n        d=\"M1 0l5 5 5-5\"\n      />\n    </svg>\n  </div>\n);\n\nexport default ArrowIcon;\n","\nimport SearchIcon from './SearchIcon';\n\nexport default SearchIcon;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './search-icon.scss';\n\ntype SearchIconType = {\n  className?: string;\n};\n\nconst SearchIcon = ({ className }: SearchIconType) => (\n  <svg\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 20 20\"\n    className={classNames('search-icon', className)}\n    aria-hidden=\"true\"\n  >\n    <path d=\"M 7.4 13.8 C 3.8 13.8 0.9 10.9 0.9 7.3 S 3.8 0.8 7.4 0.8 s 6.5 2.9 6.5 6.5 s -2.9 6.5 -6.5 6.5 Z m 0 -12 c -3 0 -5.5 2.5 -5.5 5.5 s 2.5 5.5 5.5 5.5 s 5.5 -2.5 5.5 -5.5 s -2.5 -5.5 -5.5 -5.5 Z m 11.8 17.4 c 0.2 -0.2 0.2 -0.5 0 -0.7 L 12.7 12 c -0.2 -0.2 -0.5 -0.2 -0.7 0 s -0.2 0.5 0 0.7 l 6.5 6.5 c 0.1 0.1 0.2 0.1 0.4 0.1 s 0.2 0 0.3 -0.1 Z\" />\n  </svg>\n);\n\nexport default SearchIcon;\n","import React, { ChangeEvent } from 'react';\nimport classNames from 'classnames';\nimport { CSSTransition } from 'react-transition-group';\nimport SelectOption from './SelectOption';\nimport ArrowIcon from '../icons/ArrowIcon';\nimport SearchIcon from '../icons/SearchIcon';\nimport { SelectType } from '../../common/types';\n\nimport './select-field.scss';\n\ntype SelectFieldType = {\n  options: Array<SelectType>;\n  placeholder: string;\n  value: SelectType | undefined;\n  isSearch?: boolean;\n  title?: string;\n  searchBy: string;\n  isFieldOpen: boolean;\n  isAvatarField?: boolean;\n  fieldRef: any;\n  onOptionPress: (id: number) => void;\n  onFieldClick: () => void;\n  onSearchChange: (event: ChangeEvent<HTMLInputElement>) => void;\n};\n\nconst SelectField = ({\n  options,\n  placeholder,\n  value,\n  searchBy,\n  isSearch,\n  title,\n  isFieldOpen,\n  isAvatarField,\n  fieldRef,\n  onOptionPress,\n  onFieldClick,\n  onSearchChange,\n}: SelectFieldType) => (\n  <div className=\"select-field\" ref={fieldRef}>\n    <div\n      onClick={onFieldClick}\n      className={classNames(\n        'select-field__field',\n        !value && 'select-field__field_casper-text'\n      )}\n    >\n      <SelectOption\n        value={value?.name || placeholder}\n        avatar={isAvatarField ? value?.avatar : ''}\n      />\n      <ArrowIcon\n        className=\"select-field__arrow-icon\"\n        isDownArrow={isFieldOpen}\n      />\n    </div>\n    <CSSTransition\n      in={isFieldOpen}\n      timeout={300}\n      classNames=\"select-field__transition\"\n      unmountOnExit\n      appear\n    >\n      <div className=\"select-field__options-container\">\n        {isSearch ? (\n          <div className=\"select-field__search-container\">\n            <SearchIcon className=\"select-field__search-icon\" />\n            <input\n              className=\"select-field__search-field\"\n              value={searchBy}\n              onChange={onSearchChange}\n            />\n          </div>\n        ) : (\n          <div className=\"select-field__title\">{title}</div>\n        )}\n        {options.map(({ id, name, avatar }: SelectType) => (\n          <SelectOption\n            key={id}\n            value={name}\n            avatar={isAvatarField ? avatar : ''}\n            onPress={() => onOptionPress(id)}\n          />\n        ))}\n      </div>\n    </CSSTransition>\n  </div>\n);\n\nexport default SelectField;\n","import { useCallback, useState } from 'react';\n\nconst useToggle = (initialState: boolean = false) => {\n  const [isToggledOn, setToggle] = useState(initialState);\n  const toggle = useCallback(() => setToggle((isOn) => !isOn), []);\n  const setToggleOn = useCallback(() => setToggle(true), []);\n  const setToggleOff = useCallback(() => setToggle(false), []);\n\n  return {\n    isToggledOn,\n    toggle,\n    setToggleOn,\n    setToggleOff,\n  };\n};\n\nexport default useToggle;\n","import React, { useState, useCallback, useEffect, ChangeEvent } from 'react';\nimport SelectField from './SelectField';\nimport useToggle from '../../common/hooks/useToggle';\nimport useComponentUnVisible from '../../common/hooks/useComponentUnVisible';\nimport { SelectType } from '../../common/types';\n\ntype SelectFieldContainerType = {\n  options: Array<SelectType>;\n  placeholder: string;\n  value: any;\n  isSearch?: boolean;\n  title?: string;\n  isAvatarField?: boolean;\n};\n\nconst SelectFieldContainer = ({\n  options: initialOptions,\n  placeholder,\n  value: initialValue,\n  isSearch,\n  isAvatarField,\n  title,\n}: SelectFieldContainerType) => {\n  const [options, setOptions] = useState<any>(initialOptions || []);\n  const [value, setValue] = useState(initialValue);\n  const {\n    isToggledOn: isFieldOpen,\n    toggle: toggleIsFieldOpen,\n    setToggleOff: unsetIsFieldOpen,\n  } = useToggle();\n  const [searchBy, setSearchBy] = useState('');\n  const { ref } = useComponentUnVisible(unsetIsFieldOpen);\n\n  const handleOptionPress = useCallback(\n    (currentId) => {\n      setValue(options.find(({ id }: SelectType) => currentId === id));\n      unsetIsFieldOpen();\n    },\n    [options, unsetIsFieldOpen]\n  );\n\n  const handleSearchChange = useCallback(\n    ({ target: { value } }: ChangeEvent<HTMLInputElement>) =>\n      setSearchBy(value),\n    []\n  );\n\n  useEffect(() => {\n    const regex = new RegExp(`^${searchBy}`, 'i');\n    setOptions(\n      initialOptions.filter(({ name }: SelectType) => regex.test(name))\n    );\n  }, [searchBy, initialOptions]);\n\n  return (\n    <SelectField\n      fieldRef={ref}\n      value={value}\n      options={options}\n      placeholder={placeholder}\n      title={title}\n      isSearch={isSearch}\n      isFieldOpen={isFieldOpen}\n      isAvatarField={isAvatarField}\n      searchBy={searchBy}\n      onOptionPress={handleOptionPress}\n      onFieldClick={toggleIsFieldOpen}\n      onSearchChange={handleSearchChange}\n    />\n  );\n};\n\nexport default SelectFieldContainer;\n","import { useEffect, useRef, useCallback } from 'react';\n\nexport default function useComponentUnVisible(setUnVisible: () => void) {\n  const ref = useRef<any>(null);\n\n  const handleClickOutside: (element: MouseEvent) => void = useCallback(\n    ({ target }) => {\n      if (!ref.current?.contains(target)) {\n        setUnVisible();\n      }\n    },\n    [setUnVisible]\n  );\n\n  useEffect(() => {\n    document.addEventListener('click', handleClickOutside, true);\n    return () => {\n      document.removeEventListener('click', handleClickOutside, true);\n    };\n  }, []);\n\n  return { ref };\n}\n","import Button from './Button';\n\nexport default Button;\n","import React from 'react';\nimport classNames from 'classnames';\n\nimport './button.scss';\n\ntype ButtonType = {\n  name: string,\n  onClick: () => void,\n  isPrimary?: string,\n};\n\nconst Button = ({ name, onClick, isPrimary }: ButtonType) => (\n  <button\n    className={classNames('button', isPrimary && 'button__primary')}\n    onClick={onClick}\n  >\n    {name}\n  </button>\n);\n\nexport default Button;\n","import React from 'react';\nimport TextField from '../TextField';\nimport SelectField from '../SelectField';\nimport { SelectType } from '../../common/types';\n// @ts-ignore\nimport Button from '../Button';\n\nimport './main-block.scss';\n\ntype MainBlockType = {\n  buyers: Array<SelectType>;\n  users: Array<SelectType>;\n};\n\nconst MainBlock = ({ buyers, users }: MainBlockType) => (\n  <div className=\"main-block\">\n    <SelectField\n      options={buyers}\n      placeholder=\"Select buyer\"\n      isSearch\n      value=\"\"\n    />\n    <SelectField\n      options={users}\n      placeholder=\"Select Users\"\n      isAvatarField\n      title=\"All users\"\n      value=\"\"\n    />\n    <TextField placeholder=\"Text field\" />\n    <TextField placeholder=\"Text field\" />\n    <TextField placeholder=\"Text field\" />\n    <div className=\"main-block__button-bar\">\n      <Button name=\"Reset\" />\n      <Button name=\"Filter\" isPrimary />\n    </div>\n  </div>\n);\n\nexport default MainBlock;\n","export const mockBuyersSelect = [\n  {\n    id: 1,\n    name: 'Weidar',\n  },\n  {\n    id: 2,\n    name: 'Henrieta',\n  },\n  {\n    id: 3,\n    name: 'Ruy',\n  },\n  {\n    id: 4,\n    name: 'Tanya',\n  },\n  {\n    id: 5,\n    name: 'Roderich',\n  },\n  {\n    id: 6,\n    name: 'Rozalin',\n  },\n  {\n    id: 7,\n    name: 'Leese',\n  },\n  {\n    id: 8,\n    name: 'Graig',\n  },\n  {\n    id: 9,\n    name: 'Druci',\n  },\n  {\n    id: 10,\n    name: 'Gordie',\n  },\n  {\n    id: 11,\n    name: 'Rupert',\n  },\n  {\n    id: 12,\n    name: 'Gretna',\n  },\n  {\n    id: 13,\n    name: 'Edwin',\n  },\n  {\n    id: 14,\n    name: 'Misha',\n  },\n  {\n    id: 15,\n    name: 'April',\n  },\n  {\n    id: 16,\n    name: 'Pammy',\n  },\n  {\n    id: 17,\n    name: 'Marylinda',\n  },\n  {\n    id: 18,\n    name: 'Vanya',\n  },\n  {\n    id: 19,\n    name: 'Bridget',\n  },\n  {\n    id: 20,\n    name: 'Jonathan',\n  },\n];\n\nexport const mockUserSelect = [\n  {\n    id: 1,\n    avatar: 'https://randomuser.me/api/portraits/women/61.jpg',\n    name: 'Nichole',\n  },\n  {\n    id: 2,\n    avatar: 'https://randomuser.me/api/portraits/women/63.jpg',\n    name: 'Verile',\n  },\n  {\n    id: 3,\n    avatar: 'https://randomuser.me/api/portraits/women/62.jpg',\n    name: 'Amie',\n  },\n  {\n    id: 4,\n    avatar: 'https://randomuser.me/api/portraits/men/63.jpg',\n    name: 'Thane',\n  },\n  {\n    id: 5,\n    avatar: 'https://randomuser.me/api/portraits/men/55.jpg',\n    name: 'Cherry',\n  },\n  {\n    id: 6,\n    avatar: 'https://randomuser.me/api/portraits/men/80.jpg',\n    name: 'Doe',\n  },\n  {\n    id: 7,\n    avatar: 'https://randomuser.me/api/portraits/women/30.jpg',\n    name: 'Gwendolyn',\n  },\n  {\n    id: 8,\n    avatar: 'https://randomuser.me/api/portraits/women/32.jpg',\n    name: 'Emyle',\n  },\n  {\n    id: 9,\n    avatar: 'https://randomuser.me/api/portraits/women/33.jpg',\n    name: 'Walker',\n  },\n  {\n    id: 10,\n    avatar: 'https://randomuser.me/api/portraits/women/34.jpg',\n    name: 'Ludwig',\n  },\n];\n","import React from 'react';\nimport MainBlock from './MainBlock';\nimport { mockBuyersSelect, mockUserSelect } from '../../common/mock';\n\nconst MainBlockContainer = () => {\n  return <MainBlock buyers={mockBuyersSelect} users={mockUserSelect} />;\n};\n\nexport default MainBlockContainer;\n","import Home from './Home';\n\nexport default Home;\n","import React from 'react';\n\nimport './home.scss';\n\nconst Home = () => (\n  <div className=\"home\">\n    <svg\n      xmlns=\"http://www.w3.org/2000/svg\"\n      width=\"20px\"\n      height=\"20px\"\n      viewBox=\"0 0 652.43 652.43\"\n    >\n      <path\n        fillRule=\"evenodd\"\n        strokeLinecap=\"round\"\n        strokeLinejoin=\"round\"\n        d=\"M326.225,0L20.215,359.998l28.707,28.83l73.418-83.001v265.05c0,45.037,37.209,81.553,82.064,81.553h243.642\n\t\t\t\tc44.854,0,82.063-36.516,82.063-81.553v-265.05l73.398,83.001l28.707-28.83L326.225,0z M488.64,570.877\n\t\t\t\tc0,22.529-18.187,40.777-40.614,40.777H204.404c-22.428,0-41.287-18.27-41.287-40.777V257.404L326.225,59.738l163.108,197.034\n        L488.64,570.877z\"\n        viewBox=\"20 20 20 20\"\n      />\n    </svg>\n  </div>\n);\n\nexport default Home;\n","import React from 'react';\nimport './app.scss';\nimport MainBlock from './components/MainBlock';\nimport Home from './components/icons/Home';\n\nconst App = () => (\n  <div className=\"app\">\n    <div className=\"app__header\">\n      <h1 className=\"app__title\">New page</h1>\n      <Home />\n    </div>\n    <MainBlock />\n  </div>\n);\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\n// @ts-ignore\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}